#!/usr/bin/env bash
#
# Copyright 2020 Victor Penso
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

VERSION=0.2

# Filename of this script
SCRIPT=${0##*/}

# Help text for this script
HELP=\
"usage: $SCRIPT [OPTIONS] SOURCE DEST

Copy source file to destination if differing.

positional arguments
  SOURCE            source file to copy
  DEST              path to the destination

optional arguments
  -b, --backup      backup destination file
  -d, --debug       enable debug output
  -h, --help        show this help message and exit
  -r, --recursive   create the parent directory if missing
  -s, --sudo        use Sudo to write the destination path"

function _debug() {
        if [ "$_DEBUG" = "true" ]; then
                echo 1>&2 "Debug: $@"
        fi
}

function _error() {
        echo 1>&2 "Error: $@"
	exit 1
}

# check for the dependency programs used in this script
for cmd in \
        cp \
        diff \
        dirname \
        false \
        getopt \
        mkdir \
        sudo \
        true
do
        command -v $cmd &>/dev/null || _error "$cmd program missing"
done

backup=false
recursive=false
sudo=
# Parse the command line options
ARGS=$(getopt -o bdhrs -l "backup,debug,help,recursive,sudo,version" -- "$@")
eval set -- "$ARGS"
while true; do
        case "$1" in
        -b|--backup)
                backup=true
                shift
                ;;
        -d|--debug)
                _DEBUG=true
                shift
                ;;
        -h|--help)
                echo "$HELP"
                exit 0
                ;;
        -r|--recursive)
                recursive=true
                shift
                ;;
        -s|--sudo)
                sudo=sudo
                shift
                ;;
        --version)
                echo "$VERSION"
                exit 0
                ;;
        --)
                shift
                break 
                ;;
        *) 
                break 
                ;;
        esac
done

# check use passed command-line arguments
src=$1
test -z $src && _error "source file not specified"
test -f $src || _error "$src missing, or not a file"
dst=$2
test -z $dst && _error "destination path not specified"
test -d $dst && _error "$dst is a directory"

# compare source and destination
op=
diff $src $dst &>/dev/null
case "$?" in
        2)      op=create ;;
        1)      op=update ;;
        0)      # nothing to do....
                _debug "$dst unchanged"
                exit 0
                ;;
esac

# if the parent directory is missing
dir=$(dirname $dst)
test -d $dir || {
        # create it if requested by user option
        $recursive || _error "$dir missing"
        $sudo mkdir -p $dir
}

echo $backup

# if the user requests a backup of the original destination file
$backup && {
        # if the destination file exits
        test -f $dst && $sudo cp $dst ${dst}.$(date +%Y%m%dT%H%M)
}

$sudo cp $src $dst

echo "$dst $op"

exit 0


